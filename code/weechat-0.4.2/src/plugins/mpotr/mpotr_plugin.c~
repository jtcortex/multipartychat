/* 
 * Multi-Party Off-The-Record Messaging Library (Experimental)
 *
 * Author: James Corcoran
 * Dept: Computer Engineering and Computer Science
 * JB Speed School of Engineering 
 * University of Louisville, USA
 *
 * Based on the work of Goldberg, et. al.
*/

/* system headers */
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <ctype.h>
#include <sys/time.h>
#include <time.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>

/* weechat headers */
#include "weechat/weechat-plugin.h"

#include "mpotr_plugin.h"

WEECHAT_PLUGIN_NAME(MPOTR_PLUGIN_NAME);
WEECHAT_PLUGIN_DESCRIPTION(MPOTR_PLUGIN_DESCRIPTION);
WEECHAT_PLUGIN_AUTHOR(MPOTR_PLUGIN_AUTHOR);
WEECHAT_PLUGIN_VERSION(MPOTR_PLUGIN_VERSION);
WEECHAT_PLUGIN_LICENSE(MPOTR_PLUGIN_LICENSE);

struct t_weechat_plugin *weechat_plugin = NULL;


/* callback for command "/mpotr" */

int
mpotr_auth_cb (void *data, const char *signal, const char *type_data, void *signal_data)
{
    struct t_infolist *infolist;
    const char *plugin_name, *plugin_id, *str_type, *str_protocol;
    const char *remote_nick, *local_nick, *charset_modifier, *filename, *proxy;
    int type, protocol, args, port_start, port_end, sock, port;
    const char *weechat_dir;
    char *dir1, *dir2, *filename2, *short_filename, *pos;
//    struct stat st;
    struct hostent *host;
    struct sockaddr_in addr;
    socklen_t length;
    struct in_addr tmpaddr;
    unsigned long local_addr;
    unsigned long long file_size;
    //struct t_xfer *ptr_xfer;
    char temp[50];
    /* make C compiler happy */
    (void) data;
    (void) signal;
    (void) type_data;

    memset (&addr, 0, sizeof (struct sockaddr_in));
    addr.sin_family = AF_INET;
    addr.sin_addr.s_addr = htonl (local_addr);

//    weechat_printf(NULL, address);
    sprintf(temp, "%lu", local_addr);
    weechat_printf(weechat_current_buffer(), temp);

    return WEECHAT_RC_OK;
}

int
weechat_plugin_init (struct t_weechat_plugin *plugin,
                     int argc, char *argv[])
{
    weechat_plugin = plugin;

//    weechat_hook_modifier("irc_in_msg", &wc_in_msg, NULL);
//    weechat_hook_modifier("irc_out_msg", &wc_out_msg, NULL);

    weechat_hook_signal ("mpotr_auth", &mpotr_auth_cb, NULL);

    return WEECHAT_RC_OK;
}

int
weechat_plugin_end (struct t_weechat_plugin *plugin)
{
    /* make C compiler happy */
    (void) plugin;

    return WEECHAT_RC_OK;
}
